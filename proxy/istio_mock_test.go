// Code generated by MockGen. DO NOT EDIT.
// Source: istio.go

// package proxy is a generated GoMock package.
package proxy

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Mockistioer is a mock of istioer interface
type Mockistioer struct {
	ctrl     *gomock.Controller
	recorder *MockistioerMockRecorder
}

// MockistioerMockRecorder is the mock recorder for Mockistioer
type MockistioerMockRecorder struct {
	mock *Mockistioer
}

// NewMockistioer creates a new mock instance
func NewMockistioer(ctrl *gomock.Controller) *Mockistioer {
	mock := &Mockistioer{ctrl: ctrl}
	mock.recorder = &MockistioerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mockistioer) EXPECT() *MockistioerMockRecorder {
	return m.recorder
}

// createVirtualService mocks base method
func (m *Mockistioer) createVirtualService(arg0 route) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "createVirtualService", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// createVirtualService indicates an expected call of createVirtualService
func (mr *MockistioerMockRecorder) createVirtualService(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "createVirtualService", reflect.TypeOf((*Mockistioer)(nil).createVirtualService), arg0)
}

// listRegisteredRoutes mocks base method
func (m *Mockistioer) listRegisteredRoutes() (map[string]interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "listRegisteredRoutes")
	ret0, _ := ret[0].(map[string]interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// listRegisteredRoutes indicates an expected call of listRegisteredRoutes
func (mr *MockistioerMockRecorder) listRegisteredRoutes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "listRegisteredRoutes", reflect.TypeOf((*Mockistioer)(nil).listRegisteredRoutes))
}

// deleteRoute mocks base method
func (m *Mockistioer) deleteRoute(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "deleteRoute", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// deleteRoute indicates an expected call of deleteRoute
func (mr *MockistioerMockRecorder) deleteRoute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "deleteRoute", reflect.TypeOf((*Mockistioer)(nil).deleteRoute), arg0)
}
